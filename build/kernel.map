
分配公共符号
公共符号            大小              文件

thread_ready_list   0x10              build/thread.o
tss                 0x6c              build/tss.o
thread_all_list     0x10              build/thread.o
user_pool           0x2c              build/memory.o
console_lock        0x1c              build/console.o
intr_name           0x204             build/interrupt.o
main_thread         0x4               build/thread.o
ticks               0x4               build/timer.o
kernel_vaddr        0xc               build/memory.o
ioqueue             0x6c              build/keyboard.o
syscall_table       0x80              build/syscall-init.o
idt_table           0x204             build/interrupt.o
kernel_pool         0x2c              build/memory.o
pid_lock            0x1c              build/thread.o

舍弃的输入节

 .note.GNU-stack
                0x00000000        0x0 build/main.o
 .note.GNU-stack
                0x00000000        0x0 build/init.o
 .note.GNU-stack
                0x00000000        0x0 build/interrupt.o
 .note.GNU-stack
                0x00000000        0x0 build/timer.o
 .note.GNU-stack
                0x00000000        0x0 build/debug.o
 .note.GNU-stack
                0x00000000        0x0 build/string.o
 .note.GNU-stack
                0x00000000        0x0 build/memory.o
 .note.GNU-stack
                0x00000000        0x0 build/bitmap.o
 .note.GNU-stack
                0x00000000        0x0 build/thread.o
 .note.GNU-stack
                0x00000000        0x0 build/list.o
 .note.GNU-stack
                0x00000000        0x0 build/sync.o
 .note.GNU-stack
                0x00000000        0x0 build/console.o
 .note.GNU-stack
                0x00000000        0x0 build/keyboard.o
 .note.GNU-stack
                0x00000000        0x0 build/ioqueue.o
 .note.GNU-stack
                0x00000000        0x0 build/tss.o
 .note.GNU-stack
                0x00000000        0x0 build/process.o
 .note.GNU-stack
                0x00000000        0x0 build/syscall-init.o
 .note.GNU-stack
                0x00000000        0x0 build/syscall.o
 .note.GNU-stack
                0x00000000        0x0 build/stdio.o

内存配置

名称           来源             长度             属性
*default*        0x00000000         0xffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0xc0001500
LOAD build/main.o
LOAD build/init.o
LOAD build/interrupt.o
LOAD build/timer.o
LOAD build/kernel.o
LOAD build/print.o
LOAD build/debug.o
LOAD build/string.o
LOAD build/memory.o
LOAD build/bitmap.o
LOAD build/thread.o
LOAD build/list.o
LOAD build/switch.o
LOAD build/sync.o
LOAD build/console.o
LOAD build/keyboard.o
LOAD build/ioqueue.o
LOAD build/tss.o
LOAD build/process.o
LOAD build/syscall-init.o
LOAD build/syscall.o
LOAD build/stdio.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x080480d4                        . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x080480d4        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x080480d4        0x0 build/main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x080480d4        0x0 build/main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x080480d4        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x080480d4        0x0 build/main.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.relr.dyn
 *(.relr.dyn)
                0x08049000                        . = ALIGN (CONSTANT (MAXPAGESIZE))

.init
 *(SORT_NONE(.init))

.plt            0x08049000        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x08049000        0x0 build/main.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0xc0001500     0x40d5
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(SORT_BY_NAME(.text.sorted.*))
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0xc0001500      0x180 build/main.o
                0xc0001500                main
                0xc00015be                test_thread1
                0xc00015f2                test_thread2
                0xc0001626                u_prog_a
                0xc0001653                u_prog_b
 .text          0xc0001680       0x3c build/init.o
                0xc0001680                init_all
 .text          0xc00016bc      0x482 build/interrupt.o
                0xc0001a3e                idt_init
                0xc0001aa8                register_handler
                0xc0001ac4                intr_enable
                0xc0001ae2                intr_disable
                0xc0001b01                intr_set_status
                0xc0001b1b                intr_get_status
 .text          0xc0001b3e      0x195 build/timer.o
                0xc0001b5c                frequency_set
                0xc0001bf4                intr_timer_handler
                0xc0001c73                timer_init
 *fill*         0xc0001cd3        0xd 
 .text          0xc0001ce0      0xe21 build/kernel.o
                0xc0001ce0                intr_exit
                0xc0001cee                syscall_handler
 *fill*         0xc0002b01        0xf 
 .text          0xc0002b10      0x14e build/print.o
                0xc0002b10                put_str
                0xc0002b2e                put_int
                0xc0002b91                put_char
                0xc0002c40                set_cursor
 .text          0xc0002c5e       0xb1 build/debug.o
                0xc0002c5e                panic_spin
 .text          0xc0002d0f      0x448 build/string.o
                0xc0002d0f                memset
                0xc0002d6b                memcpy
                0xc0002dd3                memcmp
                0xc0002e69                strcpy
                0xc0002ecc                strlen
                0xc0002f26                strcmp
                0xc0002fad                strchr
                0xc000300d                strrchr
                0xc0003076                strcat
                0xc00030f0                strchrs
 .text          0xc0003157      0x812 build/memory.o
                0xc0003157                vaddr_get
                0xc000327d                pte_ptr
                0xc00032ae                pde_ptr
                0xc00032ca                palloc
                0xc0003326                page_table_add
                0xc0003460                malloc_page
                0xc000352a                get_kernel_pages
                0xc000356e                get_user_pages
                0xc00035ca                get_a_page
                0xc0003742                addr_v2p
                0xc0003770                mem_pool_init
                0xc0003934                mem_init
 .text          0xc0003969      0x32f build/bitmap.o
                0xc0003969                bitmap_init
                0xc00039af                bitmap_scan_test
                0xc0003a37                bitmap_scan
                0xc0003ba5                bitmap_set
 .text          0xc0003c98      0x5dd build/thread.o
                0xc0003c98                allocate_pid
                0xc0003ccf                running_thread
                0xc0003ce2                kernel_thread
                0xc0003cfa                thread_create
                0xc0003d70                init_thread
                0xc0003e17                thread_start
                0xc0003f0b                make_main_thread
                0xc0003f92                schedule
                0xc00040ba                thread_init
                0xc0004103                thread_block
                0xc000416a                thread_unblock
 .text          0xc0004275      0x21b build/list.o
                0xc0004275                list_init
                0xc00042a2                list_insert_before
                0xc00042e3                list_push
                0xc0004300                list_append
                0xc000431d                list_remove
                0xc0004353                list_pop
                0xc00043a9                list_empty
                0xc00043c2                list_len
                0xc00043f7                list_traversal
                0xc0004455                elem_find
 .text          0xc0004490       0x15 build/switch.o
                0xc0004490                switch_to
 .text          0xc00044a5      0x33e build/sync.o
                0xc00044a5                sema_init
                0xc00044c5                lock_init
                0xc00044f6                sema_down
                0xc000460a                sema_up
                0xc00046bc                lock_acquire
                0xc0004738                lock_release
 .text          0xc00047e3       0x9a build/console.o
                0xc00047e3                console_init
                0xc00047f7                console_acquire
                0xc000480b                console_release
                0xc000481f                console_put_str
                0xc000483c                console_put_int
                0xc0004859                console_put_char
 .text          0xc000487d      0x2ac build/keyboard.o
                0xc000489a                keyboard_init
                0xc00048da                intr_keyboard_handler
 .text          0xc0004b29      0x2e5 build/ioqueue.o
                0xc0004b29                init_ioqueue
                0xc0004b68                next_pos
                0xc0004b76                ioq_full
                0xc0004bc8                ioq_empty
                0xc0004c12                ioq_wait
                0xc0004c63                wakeup
                0xc0004cae                ioq_getchar
                0xc0004d5d                ioq_putchar
 .text          0xc0004e0e      0x1a9 build/tss.o
                0xc0004e0e                updata_tss_esp
                0xc0004e20                make_gdt_desc
                0xc0004e89                tss_init
 .text          0xc0004fb7      0x322 build/process.o
                0xc0004fb7                start_process
                0xc00050b0                page_dir_activate
                0xc00050e0                process_activate
                0xc0005108                create_page_dir
                0xc0005179                create_user_vaddr_bitmap
                0xc00051bd                process_execute
 .text          0xc00052d9       0x59 build/syscall-init.o
                0xc00052d9                sys_getpid
                0xc00052eb                sys_write
                0xc00052fe                syscall_init
 .text          0xc0005332       0x31 build/syscall.o
                0xc0005332                getpid
                0xc0005347                write
 .text          0xc0005363      0x272 build/stdio.o
                0xc0005363                itoa
                0xc00053e9                vsprintf
                0xc000556d                printf
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)
                0xc0006000                        . = ALIGN (CONSTANT (MAXPAGESIZE))
                0xc0006000                        . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))

.rodata         0xc0006000      0xf22
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0xc0006000       0xba build/main.o
 .rodata        0xc00060ba        0xa build/init.o
 .rodata        0xc00060c4      0x323 build/interrupt.o
 *fill*         0xc00063e7        0x1 
 .rodata        0xc00063e8       0x75 build/timer.o
 *fill*         0xc000645d        0x3 
 .rodata        0xc0006460       0x64 build/debug.o
 .rodata        0xc00064c4       0xd6 build/string.o
 *fill*         0xc000659a        0x2 
 .rodata        0xc000659c      0x1dc build/memory.o
 .rodata        0xc0006778      0x1b7 build/bitmap.o
 *fill*         0xc000692f        0x1 
 .rodata        0xc0006930      0x2b5 build/thread.o
 *fill*         0xc0006be5        0x3 
 .rodata        0xc0006be8       0x3c build/list.o
 .rodata        0xc0006c24      0x123 build/sync.o
 .rodata        0xc0006d47       0x36 build/keyboard.o
 *fill*         0xc0006d7d        0x3 
 .rodata        0xc0006d80       0x9d build/ioqueue.o
 .rodata        0xc0006e1d       0x27 build/tss.o
 .rodata        0xc0006e44       0xb7 build/process.o
 .rodata        0xc0006efb       0x27 build/syscall-init.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.sframe
 *(.sframe)
 *(.sframe.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0xc0007000                        . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.sframe
 *(.sframe)
 *(.sframe.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0xc0007000        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0xc0007000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0xc0007000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0xc0007000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0xc0007000        0x0
 *(.got)
 .got           0xc0007000        0x0 build/main.o
 *(.igot)
                0xc0007000                        . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0xc0007000        0x0
 *(.got.plt)
 .got.plt       0xc0007000        0x0 build/main.o
 *(.igot.plt)
 .igot.plt      0xc0007000        0x0 build/main.o

.data           0xc0007000      0x296
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0xc0007000        0x0 build/main.o
 .data          0xc0007000        0x0 build/init.o
 .data          0xc0007000        0x0 build/interrupt.o
 .data          0xc0007000        0x0 build/timer.o
 .data          0xc0007000      0x200 build/kernel.o
                0xc0007000                intr_entry_table
 .data          0xc0007200        0x8 build/print.o
 .data          0xc0007208        0x0 build/debug.o
 .data          0xc0007208        0x0 build/string.o
 .data          0xc0007208        0x0 build/memory.o
 .data          0xc0007208        0x0 build/bitmap.o
 .data          0xc0007208        0x0 build/thread.o
 .data          0xc0007208        0x0 build/list.o
 .data          0xc0007208        0x0 build/sync.o
 .data          0xc0007208        0x0 build/console.o
 *fill*         0xc0007208       0x18 
 .data          0xc0007220       0x76 build/keyboard.o
 .data          0xc0007296        0x0 build/ioqueue.o
 .data          0xc0007296        0x0 build/tss.o
 .data          0xc0007296        0x0 build/process.o
 .data          0xc0007296        0x0 build/syscall-init.o
 .data          0xc0007296        0x0 build/syscall.o
 .data          0xc0007296        0x0 build/stdio.o

.data1
 *(.data1)
                0xc0007296                        _edata = .
                [!provide]                        PROVIDE (edata = .)
                0xc0007298                        . = ALIGN (ALIGNOF (NEXT_SECTION))
                0xc00072a0                        __bss_start = .

.bss            0xc00072a0      0xae0
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0xc00072a0        0x8 build/main.o
                0xc00072a0                a
                0xc00072a4                b
 .bss           0xc00072a8        0x0 build/init.o
 *fill*         0xc00072a8       0x18 
 .bss           0xc00072c0      0x408 build/interrupt.o
 .bss           0xc00076c8        0x0 build/timer.o
 .bss           0xc00076c8        0x0 build/debug.o
 .bss           0xc00076c8        0x0 build/string.o
 .bss           0xc00076c8        0x0 build/memory.o
 .bss           0xc00076c8        0x0 build/bitmap.o
 .bss           0xc00076c8        0x2 build/thread.o
 .bss           0xc00076ca        0x0 build/list.o
 .bss           0xc00076ca        0x0 build/sync.o
 .bss           0xc00076ca        0x0 build/console.o
 *fill*         0xc00076ca        0x2 
 .bss           0xc00076cc       0x14 build/keyboard.o
                0xc00076cc                ctrl_status
                0xc00076d0                shift_status
                0xc00076d4                alt_status
                0xc00076d8                caps_lock_status
                0xc00076dc                ext_scancode
 .bss           0xc00076e0        0x0 build/ioqueue.o
 .bss           0xc00076e0        0x0 build/tss.o
 .bss           0xc00076e0        0x0 build/process.o
 .bss           0xc00076e0        0x0 build/syscall-init.o
 .bss           0xc00076e0        0x0 build/syscall.o
 .bss           0xc00076e0        0x0 build/stdio.o
 *(COMMON)
 COMMON         0xc00076e0      0x424 build/interrupt.o
                0xc00076e0                intr_name
                0xc0007900                idt_table
 COMMON         0xc0007b04        0x4 build/timer.o
                0xc0007b04                ticks
 *fill*         0xc0007b08       0x18 
 COMMON         0xc0007b20       0x6c build/memory.o
                0xc0007b20                user_pool
                0xc0007b4c                kernel_vaddr
                0xc0007b60                kernel_pool
 COMMON         0xc0007b8c       0x40 build/thread.o
                0xc0007b8c                thread_ready_list
                0xc0007b9c                thread_all_list
                0xc0007bac                main_thread
                0xc0007bb0                pid_lock
 COMMON         0xc0007bcc       0x1c build/console.o
                0xc0007bcc                console_lock
 *fill*         0xc0007be8       0x18 
 COMMON         0xc0007c00       0x6c build/keyboard.o
                0xc0007c00                ioqueue
 *fill*         0xc0007c6c       0x14 
 COMMON         0xc0007c80       0x6c build/tss.o
                0xc0007c80                tss
 *fill*         0xc0007cec       0x14 
 COMMON         0xc0007d00       0x80 build/syscall-init.o
                0xc0007d00                syscall_table
                0xc0007d80                        . = ALIGN ((. != 0x0)?0x4:0x1)
                0xc0007d80                        . = ALIGN (0x4)
                0xc0007d80                        . = SEGMENT_START ("ldata-segment", .)
                0xc0007d80                        . = ALIGN (0x4)
                0xc0007d80                        _end = .
                [!provide]                        PROVIDE (end = .)
                0xc0007d80                        . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2a
 *(.comment)
 .comment       0x00000000       0x2a build/main.o
                                 0x2b (松开之前的大小)
 .comment       0x0000002a       0x2b build/init.o
 .comment       0x0000002a       0x2b build/interrupt.o
 .comment       0x0000002a       0x2b build/timer.o
 .comment       0x0000002a       0x2b build/debug.o
 .comment       0x0000002a       0x2b build/string.o
 .comment       0x0000002a       0x2b build/memory.o
 .comment       0x0000002a       0x2b build/bitmap.o
 .comment       0x0000002a       0x2b build/thread.o
 .comment       0x0000002a       0x2b build/list.o
 .comment       0x0000002a       0x2b build/sync.o
 .comment       0x0000002a       0x2b build/console.o
 .comment       0x0000002a       0x2b build/keyboard.o
 .comment       0x0000002a       0x2b build/ioqueue.o
 .comment       0x0000002a       0x2b build/tss.o
 .comment       0x0000002a       0x2b build/process.o
 .comment       0x0000002a       0x2b build/syscall-init.o
 .comment       0x0000002a       0x2b build/syscall.o
 .comment       0x0000002a       0x2b build/stdio.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_addr
 *(.debug_addr)

.debug_line_str
 *(.debug_line_str)

.debug_loclists
 *(.debug_loclists)

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
 *(.debug_rnglists)

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(build/kernel.bin elf32-i386)
