00000000000i[      ] Bochs x86 Emulator 2.6.8
00000000000i[      ]   Built from SVN snapshot on May 3, 2015
00000000000i[      ] Compiled on Mar 24 2025 at 15:28:39
00000000000i[      ] System configuration
00000000000i[      ]   processors: 1 (cores=1, HT threads=1)
00000000000i[      ]   A20 line support: yes
00000000000i[      ] IPS is set to 4000000
00000000000i[      ] CPU configuration
00000000000i[      ]   SMP support: no
00000000000i[      ]   level: 6
00000000000i[      ]   APIC support: xapic
00000000000i[      ]   FPU support: yes
00000000000i[      ]   MMX support: yes
00000000000i[      ]   3dnow! support: no
00000000000i[      ]   SEP support: yes
00000000000i[      ]   SIMD support: sse2
00000000000i[      ]   XSAVE support: no 
00000000000i[      ]   AES support: no
00000000000i[      ]   SHA support: no
00000000000i[      ]   MOVBE support: no
00000000000i[      ]   ADX support: no
00000000000i[      ]   x86-64 support: no
00000000000i[      ]   MWAIT support: yes
00000000000i[      ] Optimization configuration
00000000000i[      ]   RepeatSpeedups support: no
00000000000i[      ]   Fast function calls: no
00000000000i[      ]   Handlers Chaining speedups: no
00000000000i[      ] Devices configuration
00000000000i[      ]   NE2000 support: no
00000000000i[      ]   PCI support: yes, enabled=yes
00000000000i[      ]   SB16 support: no
00000000000i[      ]   USB support: no
00000000000i[      ]   VGA extension support: vbe
00000000000i[MEM0  ] allocated memory at 0x776a83c00010. after alignment, vector=0x776a83c01000
00000000000i[MEM0  ] 512.00MB
00000000000i[MEM0  ] mem block size = 0x00100000, blocks=512
00000000000i[MEM0  ] rom at 0xfffe0000/131072 ('/usr/local/share/bochs/BIOS-bochs-latest')
00000000000i[PLUGIN] init_dev of 'pci' plugin device by virtual method
00000000000i[DEV   ] i440FX PMC present at device 0, function 0
00000000000i[PLUGIN] init_dev of 'pci2isa' plugin device by virtual method
00000000000i[DEV   ] PIIX3 PCI-to-ISA bridge present at device 1, function 0
00000000000i[PLUGIN] init_dev of 'cmos' plugin device by virtual method
00000000000i[CMOS  ] Using local time for initial clock
00000000000i[CMOS  ] Setting initial clock to: Fri Mar 28 15:34:40 2025 (time0=1743147280)
00000000000i[PLUGIN] init_dev of 'dma' plugin device by virtual method
00000000000i[DMA   ] channel 4 used by cascade
00000000000i[PLUGIN] init_dev of 'pic' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'pit' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'vga' plugin device by virtual method
00000000000i[MEM0  ] Register memory access handlers: 0x0000000a0000 - 0x0000000bffff
00000000000i[VGA   ] interval=200000, mode=realtime
00000000000i[MEM0  ] Register memory access handlers: 0x0000e0000000 - 0x0000e0ffffff
00000000000i[BXVGA ] VBE Bochs Display Extension Enabled
00000000000i[XGUI  ] test_alloc_colors: 16 colors available out of 16 colors tried
00000000000i[XGUI  ] font 8 wide x 16 high, display depth = 24
00000000000i[KEYMAP] Loading keymap from '/usr/local/share/bochs/keymaps/x11-pc-us.map'
00000000000i[KEYMAP] Loaded 168 symbols
00000000000i[MEM0  ] rom at 0xc0000/41472 ('/usr/local/share/bochs/VGABIOS-lgpl-latest')
00000000000i[PLUGIN] init_dev of 'floppy' plugin device by virtual method
00000000000i[DMA   ] channel 2 used by Floppy Drive
00000000000i[PLUGIN] init_dev of 'acpi' plugin device by virtual method
00000000000i[DEV   ] ACPI Controller present at device 1, function 3
00000000000i[PLUGIN] init_dev of 'ioapic' plugin device by virtual method
00000000000i[IOAPIC] initializing I/O APIC
00000000000i[MEM0  ] Register memory access handlers: 0x0000fec00000 - 0x0000fec00fff
00000000000i[IOAPIC] IOAPIC enabled (base address = 0xfec00000)
00000000000i[PLUGIN] init_dev of 'keyboard' plugin device by virtual method
00000000000i[KBD   ] will paste characters every 400 keyboard ticks
00000000000i[PLUGIN] init_dev of 'harddrv' plugin device by virtual method
00000000000i[HD    ] HD on ata0-0: 'hd60M.img', 'flat' mode
00000000000i[IMG   ] hd_size: 62914560
00000000000i[HD    ] ata0-0: using specified geometry: CHS=121/16/63
00000000000i[HD    ] ata0-0: extra data outside of CHS address range
00000000000i[HD    ] translation on ata0-0 set to 'none'
00000000000i[HD    ] Using boot sequence disk, none, none
00000000000i[HD    ] Floppy boot signature check is enabled
00000000000i[PLUGIN] init_dev of 'pci_ide' plugin device by virtual method
00000000000i[DEV   ] PIIX3 PCI IDE controller present at device 1, function 1
00000000000i[PLUGIN] init_dev of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'speaker' plugin device by virtual method
00000000000e[PCSPK ] Failed to open /dev/console: 权限不够
00000000000e[PCSPK ] Deactivating beep on console
00000000000i[PLUGIN] init_dev of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'parallel' plugin device by virtual method
00000000000i[PAR   ] parallel port 1 at 0x0378 irq 7
00000000000i[PLUGIN] init_dev of 'serial' plugin device by virtual method
00000000000i[SER   ] com1 at 0x03f8 irq 4 (mode: null)
00000000000i[PLUGIN] register state of 'pci' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pci2isa' plugin device by virtual method
00000000000i[PLUGIN] register state of 'cmos' plugin device by virtual method
00000000000i[PLUGIN] register state of 'dma' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pic' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pit' plugin device by virtual method
00000000000i[PLUGIN] register state of 'vga' plugin device by virtual method
00000000000i[PLUGIN] register state of 'floppy' plugin device by virtual method
00000000000i[PLUGIN] register state of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] register state of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] register state of 'speaker' plugin device by virtual method
00000000000i[PLUGIN] register state of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] register state of 'parallel' plugin device by virtual method
00000000000i[PLUGIN] register state of 'serial' plugin device by virtual method
00000000000i[PLUGIN] register state of 'acpi' plugin device by virtual method
00000000000i[PLUGIN] register state of 'ioapic' plugin device by virtual method
00000000000i[PLUGIN] register state of 'keyboard' plugin device by virtual method
00000000000i[PLUGIN] register state of 'harddrv' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pci_ide' plugin device by virtual method
00000000000i[SYS   ] bx_pc_system_c::Reset(HARDWARE) called
00000000000i[CPU0  ] cpu hardware reset
00000000000i[APIC0 ] allocate APIC id=0 (MMIO enabled) to 0x0000fee00000
00000000000i[CPU0  ] CPUID[0x00000000]: 00000005 756e6547 6c65746e 49656e69
00000000000i[CPU0  ] CPUID[0x00000001]: 00000633 00010800 00000008 1fcbfbff
00000000000i[CPU0  ] CPUID[0x00000002]: 00410601 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000003]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000004]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000005]: 00000040 00000040 00000003 00000020
00000000000i[PLUGIN] reset of 'pci' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pci2isa' plugin device by virtual method
00000000000i[PLUGIN] reset of 'cmos' plugin device by virtual method
00000000000i[PLUGIN] reset of 'dma' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pic' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pit' plugin device by virtual method
00000000000i[PLUGIN] reset of 'vga' plugin device by virtual method
00000000000i[PLUGIN] reset of 'floppy' plugin device by virtual method
00000000000i[PLUGIN] reset of 'acpi' plugin device by virtual method
00000000000i[PLUGIN] reset of 'ioapic' plugin device by virtual method
00000000000i[PLUGIN] reset of 'keyboard' plugin device by virtual method
00000000000i[PLUGIN] reset of 'harddrv' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pci_ide' plugin device by virtual method
00000000000i[PLUGIN] reset of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] reset of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] reset of 'speaker' plugin device by virtual method
00000000000i[PLUGIN] reset of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] reset of 'parallel' plugin device by virtual method
00000000000i[PLUGIN] reset of 'serial' plugin device by virtual method
00000004661i[BIOS  ] $Revision: 12579 $ $Date: 2014-12-26 11:31:39 +0100 (Fr, 26. Dez 2014) $
00000318049i[KBD   ] reset-disable command received
00000320818i[BIOS  ] Starting rombios32
00000321256i[BIOS  ] Shutdown flag 0
00000321848i[BIOS  ] ram_size=0x20000000
00000322291i[BIOS  ] ram_end=512MB
00000362831i[BIOS  ] Found 1 cpu(s)
00000377035i[BIOS  ] bios_table_addr: 0x000fa498 end=0x000fcc00
00000704830i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00001032759i[P2ISA ] PCI IRQ routing: PIRQA# set to 0x0b
00001032778i[P2ISA ] PCI IRQ routing: PIRQB# set to 0x09
00001032797i[P2ISA ] PCI IRQ routing: PIRQC# set to 0x0b
00001032816i[P2ISA ] PCI IRQ routing: PIRQD# set to 0x09
00001032826i[P2ISA ] write: ELCR2 = 0x0a
00001033596i[BIOS  ] PIIX3/PIIX4 init: elcr=00 0a
00001041277i[BIOS  ] PCI: bus=0 devfn=0x00: vendor_id=0x8086 device_id=0x1237 class=0x0600
00001043556i[BIOS  ] PCI: bus=0 devfn=0x08: vendor_id=0x8086 device_id=0x7000 class=0x0601
00001045674i[BIOS  ] PCI: bus=0 devfn=0x09: vendor_id=0x8086 device_id=0x7010 class=0x0101
00001045899i[PIDE  ] new BM-DMA address: 0xc000
00001046515i[BIOS  ] region 4: 0x0000c000
00001048549i[BIOS  ] PCI: bus=0 devfn=0x0b: vendor_id=0x8086 device_id=0x7113 class=0x0680
00001048781i[ACPI  ] new irq line = 11
00001048793i[ACPI  ] new irq line = 9
00001048818i[ACPI  ] new PM base address: 0xb000
00001048832i[ACPI  ] new SM base address: 0xb100
00001048860i[PCI   ] setting SMRAM control register to 0x4a
00001212953i[CPU0  ] Enter to System Management Mode
00001212964i[CPU0  ] RSM: Resuming from System Management Mode
00001376985i[PCI   ] setting SMRAM control register to 0x0a
00001391851i[BIOS  ] MP table addr=0x000fa570 MPC table addr=0x000fa4a0 size=0xc8
00001393673i[BIOS  ] SMBIOS table addr=0x000fa580
00001395863i[BIOS  ] ACPI tables: RSDP addr=0x000fa6a0 ACPI DATA addr=0x1fff0000 size=0xf72
00001399097i[BIOS  ] Firmware waking vector 0x1fff00cc
00001400892i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00001401615i[BIOS  ] bios_table_cur_addr: 0x000fa6c4
00001529232i[VBIOS ] VGABios $Id: vgabios.c,v 1.76 2013/02/10 08:07:03 vruppert Exp $
00001529303i[BXVGA ] VBE known Display Interface b0c0
00001529335i[BXVGA ] VBE known Display Interface b0c5
00001532260i[VBIOS ] VBE Bios $Id: vbe.c,v 1.65 2014/07/08 18:02:25 vruppert Exp $
00001876737i[BIOS  ] ata0-0: PCHS=121/16/63 translation=none LCHS=121/16/63
00005753943i[BIOS  ] IDE time out
00017844203i[BIOS  ] Booting from 0000:7c00
00018187042e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00018504013e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00018739399e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019224202e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019291756e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019776559e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00020261362e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00020328916e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00020813719e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021298522e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021366076e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021601462e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021918433e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022403236e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022638622e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022955593e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00023190979e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00023675782e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00023992753e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024228139e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024712942e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025029913e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025265299e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025750102e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025817656e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026302459e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026787262e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026854816e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00027090202e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00027824422e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00027891976e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028127362e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028444333e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028929136e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029164522e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029481493e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029716879e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030201682e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030518653e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030754039e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00031238842e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00031555813e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00031791199e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032276002e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032343556e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032828359e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033313162e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033380716e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033616102e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034350322e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034417876e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034653262e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034970233e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00035455036e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00035690422e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00036007393e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00036242779e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00036727582e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00036848880i[XGUI  ] charmap update. Font Height is 16
00037044553e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00037279939e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00037764742e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00038081713e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00038317099e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00038801902e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00038869456e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00039354259e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00039839062e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00039906616e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00040142002e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00040458973e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00040943776e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00041179162e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00041496133e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00041731519e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00042216322e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00042533293e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00042768679e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00043253482e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00043570453e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00043805839e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00044290642e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00044358196e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00044842999e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00045327802e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00045395356e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00045630742e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00046364962e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00046432516e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00046667902e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00046984873e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00047469676e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00047705062e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00048022033e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00048257419e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00048742222e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00049059193e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00049294579e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00049779382e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00050096353e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00050331739e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00050816542e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00050884096e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00051368899e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00051853702e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00051921256e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00052156642e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00052890862e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00052958416e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00053193802e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00053510773e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00053995576e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00054230962e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00054547933e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00054783319e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00055268122e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00055585093e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00055820479e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00056305282e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00056622253e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00056857639e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00057342442e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00057409996e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00057894799e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00058379602e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00058447156e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00058682542e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00058999513e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00059484316e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00059719702e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00060036673e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00060521476e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00060756862e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00061073833e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00061309219e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00061794022e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00062110993e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00062346379e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00062831182e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00062898736e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00063383539e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00063868342e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00063935896e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00064420699e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00064905502e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00064973056e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00065208442e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00065525413e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00066010216e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00066245602e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00066562573e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00066797959e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00067282762e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00067599733e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00067835119e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00068319922e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00068636893e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00068872279e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00069357082e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00069424636e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00069909439e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00070394242e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00070461796e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00070697182e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00071431402e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00071498956e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00071734342e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00072051313e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00072536116e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00072771502e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00073088473e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00073323859e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00073808662e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00074125633e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00074361019e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00074845822e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00075162793e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00075398179e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00075882982e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00075950536e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00076435339e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00076920142e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00076987696e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00077223082e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00077957302e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00078024856e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00078260242e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00078577213e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00079062016e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00079297402e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00079614373e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00079849759e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00080334562e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00080651533e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00080886919e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00081371722e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00081688693e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00081924079e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00082408882e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00082476436e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00082961239e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00083446042e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00083513596e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00083748982e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00084065953e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00084550756e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00084786142e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00085103113e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00085338499e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00085823302e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00086140273e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00086375659e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00086860462e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00087177433e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00087412819e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00087897622e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00087965176e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00088449979e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00088934782e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00089002336e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00089237722e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00089971942e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00090039496e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00090274882e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00090591853e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00091076656e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00091312042e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00091629013e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00091864399e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00092349202e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00092666173e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00092901559e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00093386362e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00093703333e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00093938719e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00094423522e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00094491076e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00094975879e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00095460682e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00095528236e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00095763622e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00096497842e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00096565396e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00096800782e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00097117753e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00097602556e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00097837942e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00098154913e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00098390299e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00098875102e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00099192073e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00099427459e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00099912262e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00100229233e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00100464619e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00100949422e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00101016976e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00101501779e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00101986582e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00102054136e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00102289522e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00102606493e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00103091296e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00103326682e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00103643653e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00104128456e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00104363842e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00104680813e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00104916199e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00105401002e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00105717973e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00105953359e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00106438162e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00106505716e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00106990519e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00107475322e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00107542876e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00108027679e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00108512482e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00108580036e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00108815422e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00109132393e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00109617196e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00109852582e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00110169553e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00110404939e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00110889742e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00111206713e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00111442099e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00111926902e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00112243873e[CPU0  ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00333996001i[      ] cpu loop quit, shutting down simulator
00333996001i[CPU0  ] CPU is in protected mode (active)
00333996001i[CPU0  ] CS.mode = 32 bit
00333996001i[CPU0  ] SS.mode = 32 bit
00333996001i[CPU0  ] EFER   = 0x00000000
00333996001i[CPU0  ] | EAX=00000018  EBX=000707d0  ECX=000000fa  EDX=00000011
00333996001i[CPU0  ] | ESP=c009ef48  EBP=c009ef94  ESI=c00b8bb8  EDI=c00b8b18
00333996001i[CPU0  ] | IOPL=0 id vip vif ac vm rf nt of df if tf sf ZF af PF cf
00333996001i[CPU0  ] | SEG sltr(index|ti|rpl)     base    limit G D
00333996001i[CPU0  ] |  CS:0008( 0001| 0|  0) 00000000 ffffffff 1 1
00333996001i[CPU0  ] |  DS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00333996001i[CPU0  ] |  SS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00333996001i[CPU0  ] |  ES:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00333996001i[CPU0  ] |  FS:0000( 0000| 0|  0) 00000000 00000000 0 0
00333996001i[CPU0  ] |  GS:0018( 0003| 0|  0) c00b8000 00007fff 1 1
00333996001i[CPU0  ] | EIP=c0001985 (c0001985)
00333996001i[CPU0  ] | CR0=0xe0000011 CR2=0x00000000
00333996001i[CPU0  ] | CR3=0x00100000 CR4=0x00000000
00333996001i[CPU0  ] 0xc0001985>> rep movsd dword ptr es:[edi], dword ptr ds:[esi] : F3A5
00333996001i[CMOS  ] Last time is 1743147363 (Fri Mar 28 15:36:03 2025)
00333996001i[XGUI  ] Exit
00333996001i[      ] restoring default signal behavior
00333996001i[SIM   ] quit_sim called with exit code 1
